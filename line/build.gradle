buildscript {
    ext {
        kotlinVersion = "1.2.31"
        springBootVersion = "1.5.13.RELEASE"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

apply plugin: 'java'
apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "org.springframework.boot"
apply plugin: 'io.spring.dependency-management'

group = "com.example"
version = "0.0.1-SNAPSHOT"

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileJava.options.encoding = 'utf-8'
compileTestJava.options.encoding = 'utf-8'


repositories {
    mavenCentral()
    jcenter()
}

configurations {
    compile.exclude module: 'spring-boot-starter-logging'
}

dependencies {
    // kotlin
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")

    // for web
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-log4j2")

    compile ("org.apache.httpcomponents:httpclient")
    compile('com.auth0:java-jwt:3.3.0')

    // for dev
    //kapt("org.springframework.boot:spring-boot-configuration-processor")
    compileOnly("org.springframework.boot:spring-boot-configuration-processor")
    runtime("org.springframework.boot:spring-boot-devtools")

    // for test
    testCompile("org.springframework.boot:spring-boot-starter-test")
}